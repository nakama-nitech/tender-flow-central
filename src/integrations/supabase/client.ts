// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = process.env.VITE_SUPABASE_URL;
const SUPABASE_PUBLISHABLE_KEY = process.env.VITE_SUPABASE_ANON_KEY;

if (!SUPABASE_URL || !SUPABASE_PUBLISHABLE_KEY) {
  throw new Error('Missing Supabase environment variables. Please check your .env file.');
}

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Extended RPC functions interface
interface RPCFunctions {
  create_supplier: (args: {
    supplier_id: string;
    company_type_id_input: number;
    company_name_input: string;
    location_input: string;
    country_input: string;
    phone_number_input: string;
    kra_pin_input: string;
    physical_address_input: string | null;
    website_url_input: string | null;
  }) => Promise<{ data: null; error: any }>;
  
  add_supplier_category: (args: {
    supplier_id_input: string;
    category_id_input: number;
  }) => Promise<{ data: null; error: any }>;
  
  add_supplier_location: (args: {
    supplier_id_input: string;
    location_id_input: number;
  }) => Promise<{ data: null; error: any }>;
}

// Extend the supabase client's rpc method to include our custom functions
declare module '@supabase/supabase-js' {
  interface SupabaseClient<Database> {
    rpc<
      FunctionName extends keyof RPCFunctions
    >(
      fn: FunctionName,
      args?: Parameters<RPCFunctions[FunctionName]>[0]
    ): Promise<{ data: any; error: any }>;
  }
}
